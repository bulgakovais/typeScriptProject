let today = new Date();
let curr_date = today.getDate().toString().padStart(2, "0");
let curr_month = (today.getMonth() + 1).toString().padStart(2, "0");
let next_month = (today.getMonth() + 2).toString().padStart(2, "0");
let curr_year = today.getFullYear();
let lastDayDate = (new Date(today.getFullYear(), today.getMonth() + 2, 0)).toLocaleString('RU', { day: 'numeric' });
export const todayDMY = `${curr_year}-${curr_month}-${curr_date}`;
export const defaultDateIn = `${curr_year}-${curr_month}-${today.getDate() + 1}`;
export const defaultDateOff = `${curr_year}-${curr_month}-${today.getDate() + 3}`;
export const lastDayNextMonth = `${curr_year}-${next_month}-${lastDayDate}`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGF0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBSSxLQUFLLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUV2QixJQUFJLFNBQVMsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUM1RCxJQUFJLFVBQVUsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3BFLElBQUksVUFBVSxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDcEUsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BDLElBQUksV0FBVyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7QUFFcEgsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFXLEdBQUcsU0FBUyxJQUFJLFVBQVUsSUFBSSxTQUFTLEVBQUUsQ0FBQTtBQUN6RSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQVcsR0FBRyxTQUFTLElBQUksVUFBVSxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQTtBQUN4RixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQVcsR0FBRyxTQUFTLElBQUksVUFBVSxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQTtBQUN6RixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBVyxHQUFHLFNBQVMsSUFBSSxVQUFVLElBQUksV0FBVyxFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcbmxldCB0b2RheSA9IG5ldyBEYXRlKCk7XG5cbmxldCBjdXJyX2RhdGUgPSB0b2RheS5nZXREYXRlKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIik7XG5sZXQgY3Vycl9tb250aCA9ICh0b2RheS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIik7XG5sZXQgbmV4dF9tb250aCA9ICh0b2RheS5nZXRNb250aCgpICsgMikudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIik7XG5sZXQgY3Vycl95ZWFyID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcbmxldCBsYXN0RGF5RGF0ZSA9IChuZXcgRGF0ZSh0b2RheS5nZXRGdWxsWWVhcigpLCB0b2RheS5nZXRNb250aCgpICsgMiwgMCkpLnRvTG9jYWxlU3RyaW5nKCdSVScsIHsgZGF5OiAnbnVtZXJpYycgfSk7XG5cbmV4cG9ydCBjb25zdCB0b2RheURNWTogc3RyaW5nID0gYCR7Y3Vycl95ZWFyfS0ke2N1cnJfbW9udGh9LSR7Y3Vycl9kYXRlfWBcbmV4cG9ydCBjb25zdCBkZWZhdWx0RGF0ZUluOiBzdHJpbmcgPSBgJHtjdXJyX3llYXJ9LSR7Y3Vycl9tb250aH0tJHt0b2RheS5nZXREYXRlKCkgKyAxfWBcbmV4cG9ydCBjb25zdCBkZWZhdWx0RGF0ZU9mZjogc3RyaW5nID0gYCR7Y3Vycl95ZWFyfS0ke2N1cnJfbW9udGh9LSR7dG9kYXkuZ2V0RGF0ZSgpICsgM31gXG5leHBvcnQgY29uc3QgbGFzdERheU5leHRNb250aDogc3RyaW5nID0gYCR7Y3Vycl95ZWFyfS0ke25leHRfbW9udGh9LSR7bGFzdERheURhdGV9YFxuIl19
const ONE_DAY = 1;
const THREE_DAY = 3;
const ONE_MONTH = 1;
const TWO_MONTH = 2;
let today = new Date();
let currDate = today.getDate().toString().padStart(2, "0");
let currMonth = (today.getMonth() + ONE_MONTH).toString().padStart(2, "0");
let nextMonth = (today.getMonth() + TWO_MONTH).toString().padStart(2, "0");
let currYear = today.getFullYear();
let lastDayDate = (new Date(today.getFullYear(), today.getMonth() + TWO_MONTH, 0)).toLocaleString('RU', { day: 'numeric' });
export const todayDMY = `${currYear}-${currMonth}-${currDate}`;
export const defaultDateIn = `${currYear}-${currMonth}-${today.getDate() + ONE_DAY}`;
export const defaultDateOff = `${currYear}-${currMonth}-${today.getDate() + THREE_DAY}`;
export const lastDayNextMonth = `${currYear}-${nextMonth}-${lastDayDate}`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGF0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFBO0FBQ2pCLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQTtBQUNuQixNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUE7QUFDbkIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFBO0FBQ25CLElBQUksS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7QUFDdkIsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDM0QsSUFBSSxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUMzRSxJQUFJLFNBQVMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxTQUFTLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzNFLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNuQyxJQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsRUFBRSxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBRTVILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBVyxHQUFHLFFBQVEsSUFBSSxTQUFTLElBQUksUUFBUSxFQUFFLENBQUE7QUFDdEUsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFXLEdBQUcsUUFBUSxJQUFJLFNBQVMsSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUE7QUFDNUYsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFXLEdBQUcsUUFBUSxJQUFJLFNBQVMsSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsU0FBUyxFQUFFLENBQUE7QUFDL0YsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQVcsR0FBRyxRQUFRLElBQUksU0FBUyxJQUFJLFdBQVcsRUFBRSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBPTkVfREFZID0gMVxuY29uc3QgVEhSRUVfREFZID0gM1xuY29uc3QgT05FX01PTlRIID0gMVxuY29uc3QgVFdPX01PTlRIID0gMlxubGV0IHRvZGF5ID0gbmV3IERhdGUoKTtcbmxldCBjdXJyRGF0ZSA9IHRvZGF5LmdldERhdGUoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbmxldCBjdXJyTW9udGggPSAodG9kYXkuZ2V0TW9udGgoKSArIE9ORV9NT05USCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIik7XG5sZXQgbmV4dE1vbnRoID0gKHRvZGF5LmdldE1vbnRoKCkgKyBUV09fTU9OVEgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpO1xubGV0IGN1cnJZZWFyID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcbmxldCBsYXN0RGF5RGF0ZSA9IChuZXcgRGF0ZSh0b2RheS5nZXRGdWxsWWVhcigpLCB0b2RheS5nZXRNb250aCgpICsgVFdPX01PTlRILCAwKSkudG9Mb2NhbGVTdHJpbmcoJ1JVJywgeyBkYXk6ICdudW1lcmljJyB9KTtcblxuZXhwb3J0IGNvbnN0IHRvZGF5RE1ZOiBzdHJpbmcgPSBgJHtjdXJyWWVhcn0tJHtjdXJyTW9udGh9LSR7Y3VyckRhdGV9YFxuZXhwb3J0IGNvbnN0IGRlZmF1bHREYXRlSW46IHN0cmluZyA9IGAke2N1cnJZZWFyfS0ke2N1cnJNb250aH0tJHt0b2RheS5nZXREYXRlKCkgKyBPTkVfREFZfWBcbmV4cG9ydCBjb25zdCBkZWZhdWx0RGF0ZU9mZjogc3RyaW5nID0gYCR7Y3VyclllYXJ9LSR7Y3Vyck1vbnRofS0ke3RvZGF5LmdldERhdGUoKSArIFRIUkVFX0RBWX1gXG5leHBvcnQgY29uc3QgbGFzdERheU5leHRNb250aDogc3RyaW5nID0gYCR7Y3VyclllYXJ9LSR7bmV4dE1vbnRofS0ke2xhc3REYXlEYXRlfWBcbiJdfQ==
import { renderUserBlock } from "../user.js";
import { getFavoritePlacesFromLocalStorage } from "./getFavoritePlacesFromLocalStorage.js";
import { getFavoritesCaption, getUserData } from "./userData.js";
export function favoritesHandlerClick(event, places) {
    if (event.target.classList.contains("btn-book-place'")) {
        console.log(event.target);
    }
    // Если нажали на значок избранного
    if (event.target.classList.contains("favorites")) {
        let targetHeart = event.target;
        if (targetHeart.tagName != 'DIV')
            return;
        let targetPlace = {};
        places.forEach(place => {
            if (place.id == targetHeart.id) {
                targetPlace = place;
            }
        });
        toggleFavoriteItem(targetHeart, targetPlace);
    }
}
function toggleFavoriteItem(listItem, targetPlace) {
    let favoritePlaces = getFavoritePlacesFromLocalStorage();
    if (listItem.classList.contains('active')) {
        listItem.classList.remove('active');
        if (Array.isArray(favoritePlaces)) {
            const updatedFavorites = favoritePlaces.filter((f) => f.id !== Number(listItem.id));
            localStorage.setItem('favoriteItems', JSON.stringify(updatedFavorites));
        }
    }
    else {
        listItem.classList.add('active');
        const data = { id: targetPlace.id, name: targetPlace.name, image: targetPlace.image };
        if (Array.isArray(favoritePlaces)) {
            const allData = JSON.stringify([...favoritePlaces, data]);
            localStorage.setItem('favoriteItems', allData);
        }
    }
    // Запускаем рендер <header> сайта
    const user = getUserData();
    const favoritesCaption = getFavoritesCaption();
    renderUserBlock(user, favoritesCaption);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmF2b3JpdGVzSGFuZGxlckNsaWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hlbHBlcnMvZmF2b3JpdGVzSGFuZGxlckNsaWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDNUMsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUE7QUFDMUYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUdoRSxNQUFNLFVBQVUscUJBQXFCLENBQUMsS0FBSyxFQUFFLE1BQU07SUFFakQsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtLQUMxQjtJQUNELG1DQUFtQztJQUNuQyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUNoRCxJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFBO1FBQzlCLElBQUksV0FBVyxDQUFDLE9BQU8sSUFBSSxLQUFLO1lBQUUsT0FBTTtRQUN4QyxJQUFJLFdBQVcsR0FBWSxFQUFFLENBQUE7UUFDN0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixJQUFJLEtBQUssQ0FBQyxFQUFFLElBQUksV0FBVyxDQUFDLEVBQUUsRUFBRTtnQkFDOUIsV0FBVyxHQUFHLEtBQUssQ0FBQTthQUNwQjtRQUNILENBQUMsQ0FBQyxDQUFBO1FBQ0Ysa0JBQWtCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFBO0tBQzdDO0FBQ0gsQ0FBQztBQUVELFNBQVMsa0JBQWtCLENBQUMsUUFBUSxFQUFFLFdBQVc7SUFDL0MsSUFBSSxjQUFjLEdBQWMsaUNBQWlDLEVBQUUsQ0FBQTtJQUNuRSxJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3pDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ25DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUVqQyxNQUFNLGdCQUFnQixHQUF1RCxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtZQUN2SSxZQUFZLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQTtTQUV4RTtLQUNGO1NBQ0k7UUFDSCxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoQyxNQUFNLElBQUksR0FBRyxFQUFFLEVBQUUsRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUE7UUFDckYsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ2pDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO1lBQ3pELFlBQVksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFBO1NBQy9DO0tBQ0Y7SUFFRCxrQ0FBa0M7SUFDbEMsTUFBTSxJQUFJLEdBQUcsV0FBVyxFQUFFLENBQUE7SUFDMUIsTUFBTSxnQkFBZ0IsR0FBRyxtQkFBbUIsRUFBRSxDQUFBO0lBQzlDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQTtBQUN6QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyVXNlckJsb2NrIH0gZnJvbSBcIi4uL3VzZXIuanNcIlxuaW1wb3J0IHsgZ2V0RmF2b3JpdGVQbGFjZXNGcm9tTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4vZ2V0RmF2b3JpdGVQbGFjZXNGcm9tTG9jYWxTdG9yYWdlLmpzXCJcbmltcG9ydCB7IGdldEZhdm9yaXRlc0NhcHRpb24sIGdldFVzZXJEYXRhIH0gZnJvbSBcIi4vdXNlckRhdGEuanNcIlxuXG5cbmV4cG9ydCBmdW5jdGlvbiBmYXZvcml0ZXNIYW5kbGVyQ2xpY2soZXZlbnQsIHBsYWNlcykge1xuXG4gIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYnRuLWJvb2stcGxhY2UnXCIpKSB7XG4gICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0KVxuICB9XG4gIC8vINCV0YHQu9C4INC90LDQttCw0LvQuCDQvdCwINC30L3QsNGH0L7QuiDQuNC30LHRgNCw0L3QvdC+0LPQvlxuICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImZhdm9yaXRlc1wiKSkge1xuICAgIGxldCB0YXJnZXRIZWFydCA9IGV2ZW50LnRhcmdldFxuICAgIGlmICh0YXJnZXRIZWFydC50YWdOYW1lICE9ICdESVYnKSByZXR1cm5cbiAgICBsZXQgdGFyZ2V0UGxhY2U6IHVua25vd24gPSB7fVxuICAgIHBsYWNlcy5mb3JFYWNoKHBsYWNlID0+IHtcbiAgICAgIGlmIChwbGFjZS5pZCA9PSB0YXJnZXRIZWFydC5pZCkge1xuICAgICAgICB0YXJnZXRQbGFjZSA9IHBsYWNlXG4gICAgICB9XG4gICAgfSlcbiAgICB0b2dnbGVGYXZvcml0ZUl0ZW0odGFyZ2V0SGVhcnQsIHRhcmdldFBsYWNlKVxuICB9XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUZhdm9yaXRlSXRlbShsaXN0SXRlbSwgdGFyZ2V0UGxhY2UpIHtcbiAgbGV0IGZhdm9yaXRlUGxhY2VzOiB1bmtub3duW10gPSBnZXRGYXZvcml0ZVBsYWNlc0Zyb21Mb2NhbFN0b3JhZ2UoKVxuICBpZiAobGlzdEl0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xuICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmF2b3JpdGVQbGFjZXMpKSB7XG5cbiAgICAgIGNvbnN0IHVwZGF0ZWRGYXZvcml0ZXM6IEFycmF5PHsgaWQ6IG51bWJlciwgbmFtZTogc3RyaW5nLCBpbWFnZTogc3RyaW5nIH0+ID0gZmF2b3JpdGVQbGFjZXMuZmlsdGVyKChmKSA9PiBmLmlkICE9PSBOdW1iZXIobGlzdEl0ZW0uaWQpKVxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2Zhdm9yaXRlSXRlbXMnLCBKU09OLnN0cmluZ2lmeSh1cGRhdGVkRmF2b3JpdGVzKSlcblxuICAgIH1cbiAgfVxuICBlbHNlIHtcbiAgICBsaXN0SXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxuICAgIGNvbnN0IGRhdGEgPSB7IGlkOiB0YXJnZXRQbGFjZS5pZCwgbmFtZTogdGFyZ2V0UGxhY2UubmFtZSwgaW1hZ2U6IHRhcmdldFBsYWNlLmltYWdlIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShmYXZvcml0ZVBsYWNlcykpIHtcbiAgICAgIGNvbnN0IGFsbERhdGEgPSBKU09OLnN0cmluZ2lmeShbLi4uZmF2b3JpdGVQbGFjZXMsIGRhdGFdKVxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2Zhdm9yaXRlSXRlbXMnLCBhbGxEYXRhKVxuICAgIH1cbiAgfVxuXG4gIC8vINCX0LDQv9GD0YHQutCw0LXQvCDRgNC10L3QtNC10YAgPGhlYWRlcj4g0YHQsNC50YLQsFxuICBjb25zdCB1c2VyID0gZ2V0VXNlckRhdGEoKVxuICBjb25zdCBmYXZvcml0ZXNDYXB0aW9uID0gZ2V0RmF2b3JpdGVzQ2FwdGlvbigpXG4gIHJlbmRlclVzZXJCbG9jayh1c2VyLCBmYXZvcml0ZXNDYXB0aW9uKVxufVxuIl19
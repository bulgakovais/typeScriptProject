import { renderUserBlock } from "../user.js";
import { getFavoritePlacesFromLocalStorage } from "./getFavoritePlacesFromLocalStorage.js";
import { getFavoritesCaption, getUserData } from "./userData.js";
export function favoritesHandlerClick(event, places) {
    if (event.target.classList.contains("btn-book-place'")) {
        console.log(event.target);
    }
    // Если нажали на значок избранного
    if (event.target.classList.contains("favorites")) {
        let targetHeart = event.target;
        if (targetHeart.tagName != 'DIV')
            return;
        let targetPlace = {};
        places.forEach(place => {
            if (place.id == targetHeart.id) {
                return targetPlace = place;
            }
        });
        toggleFavoriteItem(targetHeart, targetPlace);
    }
}
function toggleFavoriteItem(listItem, targetPlace) {
    let favoritePlaces = getFavoritePlacesFromLocalStorage();
    if (listItem.classList.contains('active')) {
        listItem.classList.remove('active');
        if (Array.isArray(favoritePlaces)) {
            const updatedFavorites = favoritePlaces.filter((f) => f.id != listItem.id);
            localStorage.setItem('favoriteItems', JSON.stringify(updatedFavorites));
        }
    }
    else {
        listItem.classList.add('active');
        const data = { id: targetPlace.id, name: targetPlace.name, image: targetPlace.image };
        if (Array.isArray(favoritePlaces)) {
            const allData = JSON.stringify([...favoritePlaces, data]);
            localStorage.setItem('favoriteItems', allData);
        }
    }
    // Запускаем рендер <header> сайта
    const user = getUserData();
    const favoritesCaption = getFavoritesCaption();
    renderUserBlock(user, favoritesCaption);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmF2b3JpdGVzSGFuZGxlckNsaWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hlbHBlcnMvZmF2b3JpdGVzSGFuZGxlckNsaWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDNUMsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUE7QUFDMUYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUdoRSxNQUFNLFVBQVUscUJBQXFCLENBQUMsS0FBSyxFQUFFLE1BQU07SUFFakQsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtLQUMxQjtJQUNELG1DQUFtQztJQUNuQyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUNoRCxJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFBO1FBQzlCLElBQUksV0FBVyxDQUFDLE9BQU8sSUFBSSxLQUFLO1lBQUUsT0FBTTtRQUN4QyxJQUFJLFdBQVcsR0FBWSxFQUFFLENBQUE7UUFDN0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixJQUFJLEtBQUssQ0FBQyxFQUFFLElBQUksV0FBVyxDQUFDLEVBQUUsRUFBRTtnQkFDOUIsT0FBTyxXQUFXLEdBQUcsS0FBSyxDQUFBO2FBQzNCO1FBQ0gsQ0FBQyxDQUFDLENBQUE7UUFDRixrQkFBa0IsQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLENBQUE7S0FDN0M7QUFDSCxDQUFDO0FBRUQsU0FBUyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsV0FBVztJQUMvQyxJQUFJLGNBQWMsR0FBYyxpQ0FBaUMsRUFBRSxDQUFBO0lBQ25FLElBQUksUUFBUSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDekMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDbkMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBRWpDLE1BQU0sZ0JBQWdCLEdBQStDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ3RILFlBQVksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFBO1NBRXhFO0tBQ0Y7U0FDSTtRQUNILFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ2hDLE1BQU0sSUFBSSxHQUFHLEVBQUUsRUFBRSxFQUFFLFdBQVcsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtRQUNyRixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUU7WUFDakMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7WUFDekQsWUFBWSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUE7U0FDL0M7S0FDRjtJQUVELGtDQUFrQztJQUNsQyxNQUFNLElBQUksR0FBRyxXQUFXLEVBQUUsQ0FBQTtJQUMxQixNQUFNLGdCQUFnQixHQUFHLG1CQUFtQixFQUFFLENBQUE7SUFDOUMsZUFBZSxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXJVc2VyQmxvY2sgfSBmcm9tIFwiLi4vdXNlci5qc1wiXG5pbXBvcnQgeyBnZXRGYXZvcml0ZVBsYWNlc0Zyb21Mb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9nZXRGYXZvcml0ZVBsYWNlc0Zyb21Mb2NhbFN0b3JhZ2UuanNcIlxuaW1wb3J0IHsgZ2V0RmF2b3JpdGVzQ2FwdGlvbiwgZ2V0VXNlckRhdGEgfSBmcm9tIFwiLi91c2VyRGF0YS5qc1wiXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGZhdm9yaXRlc0hhbmRsZXJDbGljayhldmVudCwgcGxhY2VzKSB7XG5cbiAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJidG4tYm9vay1wbGFjZSdcIikpIHtcbiAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQpXG4gIH1cbiAgLy8g0JXRgdC70Lgg0L3QsNC20LDQu9C4INC90LAg0LfQvdCw0YfQvtC6INC40LfQsdGA0LDQvdC90L7Qs9C+XG4gIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmF2b3JpdGVzXCIpKSB7XG4gICAgbGV0IHRhcmdldEhlYXJ0ID0gZXZlbnQudGFyZ2V0XG4gICAgaWYgKHRhcmdldEhlYXJ0LnRhZ05hbWUgIT0gJ0RJVicpIHJldHVyblxuICAgIGxldCB0YXJnZXRQbGFjZTogdW5rbm93biA9IHt9XG4gICAgcGxhY2VzLmZvckVhY2gocGxhY2UgPT4ge1xuICAgICAgaWYgKHBsYWNlLmlkID09IHRhcmdldEhlYXJ0LmlkKSB7XG4gICAgICAgIHJldHVybiB0YXJnZXRQbGFjZSA9IHBsYWNlXG4gICAgICB9XG4gICAgfSlcbiAgICB0b2dnbGVGYXZvcml0ZUl0ZW0odGFyZ2V0SGVhcnQsIHRhcmdldFBsYWNlKVxuICB9XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUZhdm9yaXRlSXRlbShsaXN0SXRlbSwgdGFyZ2V0UGxhY2UpIHtcbiAgbGV0IGZhdm9yaXRlUGxhY2VzOiB1bmtub3duW10gPSBnZXRGYXZvcml0ZVBsYWNlc0Zyb21Mb2NhbFN0b3JhZ2UoKVxuICBpZiAobGlzdEl0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xuICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmF2b3JpdGVQbGFjZXMpKSB7XG5cbiAgICAgIGNvbnN0IHVwZGF0ZWRGYXZvcml0ZXM6IEFycmF5PHsgaWQsIG5hbWU6IHN0cmluZywgaW1hZ2U6IHN0cmluZyB9PiA9IGZhdm9yaXRlUGxhY2VzLmZpbHRlcigoZikgPT4gZi5pZCAhPSBsaXN0SXRlbS5pZClcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdmYXZvcml0ZUl0ZW1zJywgSlNPTi5zdHJpbmdpZnkodXBkYXRlZEZhdm9yaXRlcykpXG5cbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgbGlzdEl0ZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcbiAgICBjb25zdCBkYXRhID0geyBpZDogdGFyZ2V0UGxhY2UuaWQsIG5hbWU6IHRhcmdldFBsYWNlLm5hbWUsIGltYWdlOiB0YXJnZXRQbGFjZS5pbWFnZSB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmF2b3JpdGVQbGFjZXMpKSB7XG4gICAgICBjb25zdCBhbGxEYXRhID0gSlNPTi5zdHJpbmdpZnkoWy4uLmZhdm9yaXRlUGxhY2VzLCBkYXRhXSlcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdmYXZvcml0ZUl0ZW1zJywgYWxsRGF0YSlcbiAgICB9XG4gIH1cblxuICAvLyDQl9Cw0L/Rg9GB0LrQsNC10Lwg0YDQtdC90LTQtdGAIDxoZWFkZXI+INGB0LDQudGC0LBcbiAgY29uc3QgdXNlciA9IGdldFVzZXJEYXRhKClcbiAgY29uc3QgZmF2b3JpdGVzQ2FwdGlvbiA9IGdldEZhdm9yaXRlc0NhcHRpb24oKVxuICByZW5kZXJVc2VyQmxvY2sodXNlciwgZmF2b3JpdGVzQ2FwdGlvbilcbn1cbiJdfQ==
import { defaultDateOff, defaultDateIn } from '../dates.js';
import { baseURL } from "./index.js";
import { renderSearchResultsBlock } from "../search-results.js";
export const placeArray = [];
export function fetchPlaces(searchFormData) {
    const coordinates = `59.9386,30.3141`;
    const checkIn = new Date(searchFormData.dateIn).getTime() || new Date(defaultDateIn).getTime();
    const checkOut = new Date(searchFormData.dateOut).getTime() || new Date(defaultDateOff).getTime();
    fetch(baseURL + `/places?coordinates=${coordinates}&checkInDate=${checkIn}&checkOutDate=${checkOut}&maxPrice=${searchFormData.maxPrice}`)
        .then(response => response.json())
        .then((data) => {
        console.log(`data fetchPlaces ${data}`);
        data.forEach((dataItem) => {
            placeArray.push(dataItem);
        });
        console.log(placeArray);
        renderSearchResultsBlock(placeArray);
        return placeArray;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmV0Y2hQbGFjZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvQVBJL2ZldGNoUGxhY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFBO0FBQzNELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDcEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sc0JBQXNCLENBQUE7QUFHL0QsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFZLEVBQUUsQ0FBQTtBQUVyQyxNQUFNLFVBQVUsV0FBVyxDQUFDLGNBQWM7SUFFeEMsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUE7SUFDckMsTUFBTSxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxJQUFJLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQzlGLE1BQU0sUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUdqRyxLQUFLLENBQUMsT0FBTyxHQUFHLHVCQUF1QixXQUFXLGdCQUFnQixPQUFPLGlCQUFpQixRQUFRLGFBQWEsY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3RJLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNqQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLElBQUksRUFBRSxDQUFDLENBQUE7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ3hCLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDM0IsQ0FBQyxDQUFDLENBQUE7UUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ3ZCLHdCQUF3QixDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ3BDLE9BQU8sVUFBVSxDQUFBO0lBQ25CLENBQUMsQ0FBQyxDQUFBO0FBRU4sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgZGVmYXVsdERhdGVPZmYsIGRlZmF1bHREYXRlSW4gfSBmcm9tICcuLi9kYXRlcy5qcydcbmltcG9ydCB7IGJhc2VVUkwgfSBmcm9tIFwiLi9pbmRleC5qc1wiXG5pbXBvcnQgeyByZW5kZXJTZWFyY2hSZXN1bHRzQmxvY2sgfSBmcm9tIFwiLi4vc2VhcmNoLXJlc3VsdHMuanNcIlxuaW1wb3J0IHsgUGxhY2UgfSBmcm9tICcuLi9oZWxwZXJzL2ludGVyZmFjZXMuanMnXG5cbmV4cG9ydCBjb25zdCBwbGFjZUFycmF5OiBQbGFjZVtdID0gW11cblxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoUGxhY2VzKHNlYXJjaEZvcm1EYXRhKSB7XG5cbiAgY29uc3QgY29vcmRpbmF0ZXMgPSBgNTkuOTM4NiwzMC4zMTQxYFxuICBjb25zdCBjaGVja0luID0gbmV3IERhdGUoc2VhcmNoRm9ybURhdGEuZGF0ZUluKS5nZXRUaW1lKCkgfHwgbmV3IERhdGUoZGVmYXVsdERhdGVJbikuZ2V0VGltZSgpXG4gIGNvbnN0IGNoZWNrT3V0ID0gbmV3IERhdGUoc2VhcmNoRm9ybURhdGEuZGF0ZU91dCkuZ2V0VGltZSgpIHx8IG5ldyBEYXRlKGRlZmF1bHREYXRlT2ZmKS5nZXRUaW1lKClcblxuXG4gIGZldGNoKGJhc2VVUkwgKyBgL3BsYWNlcz9jb29yZGluYXRlcz0ke2Nvb3JkaW5hdGVzfSZjaGVja0luRGF0ZT0ke2NoZWNrSW59JmNoZWNrT3V0RGF0ZT0ke2NoZWNrT3V0fSZtYXhQcmljZT0ke3NlYXJjaEZvcm1EYXRhLm1heFByaWNlfWApXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgZGF0YSBmZXRjaFBsYWNlcyAke2RhdGF9YClcbiAgICAgIGRhdGEuZm9yRWFjaCgoZGF0YUl0ZW0pID0+IHtcbiAgICAgICAgcGxhY2VBcnJheS5wdXNoKGRhdGFJdGVtKVxuICAgICAgfSlcblxuICAgICAgY29uc29sZS5sb2cocGxhY2VBcnJheSlcbiAgICAgIHJlbmRlclNlYXJjaFJlc3VsdHNCbG9jayhwbGFjZUFycmF5KVxuICAgICAgcmV0dXJuIHBsYWNlQXJyYXlcbiAgICB9KVxuXG59XG5cblxuIl19